arrays.js
Реализуйте и экспортируйте по умолчанию функцию, которая принимает двумерный массив (матрицу) и возвращает массив, изменённый таким образом, что правая половина матрицы становится зеркальной копией левой половины, симметричной относительно вертикальной оси матрицы. Для простоты условимся, что матрица всегда имеет чётное количество столбцов и количество столбцов всегда равно количеству строк.

Примеры
getMirrorMatrix([
  [11, 12, 13, 14],
  [21, 22, 23, 24],
  [31, 32, 33, 34],
  [41, 42, 43, 44],
]);

//  [
//     [11, 12, 12, 11],
//     [21, 22, 22, 21],
//     [31, 32, 32, 31],
//     [41, 42, 42, 41],
//  ]
Подсказки
Постарайтесь решить данное испытание без использования встроенных методов массива. Ограничение не касается метода push(), который добавляет элементы в массив.


const getMirrorMatrix = (arr) => {
  const newArr = [];
  const arrLength = arr.length;
  const halfArrLength = arrLength / 2;

  const pushElement = (arr1) => {
    let tt = 1;
    const newArr1 = [];
    for (let t = 0; t < arr1.length; t += 1) {
      if (t < halfArrLength) {
        newArr1.push(arr1[t]);
      } else if (t >= halfArrLength) {
        newArr1.push(arr1[t - tt]);
        tt += 2;
      }
    }
    newArr.push(newArr1);
    return newArr1;
  };

  arr.forEach((item) => {
    pushElement(item);
  });
  return newArr;
};
export default getMirrorMatrix;
